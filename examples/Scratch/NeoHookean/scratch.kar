#####################################################
#               UNITS: Pa, m, s                     #
#####################################################

E = 100
nu = 0.3
K = E/(3*(1-2*nu))
mu = E/(2*(1+nu))
rho = 100
lambda = E*nu/((1+nu)*(1-2*nu))
c = sqrt(E/rho)

Lx = 1
Ly = 1
Lz = 1
hLx = 0.5*Lx
hLy = 0.5*Ly
hLz = 0.5*Lz
#A_zy = L*L

FLIP=0.99

#---------- SET METHOD --------------#
method(tlmpm, FLIP, linear, FLIP)

dimension(3)

region(box, block, -hLx, hLx, -hLy, hLy, -hLz, hLz)

material(mat1, neo-hookean, rho, E, nu)


#---------- SET SOLID --------------#
N = 25
cellsize = Lx/N

solid(solid1, box, 1, mat1, cellsize)

#---------- IMPOSE BOUNDARY CONDITIONS --------------#
region(bot, block, INF, INF, INF, -hLy+0.6*cellsize, INF, INF)
group(botp, particles, region, bot, solid, solid1)
group(botn, nodes, region, bot, solid, solid1)

fix(BC_bot, velocity_nodes, botn, 0, 0, 0)

#------------------ INDENTER ------------------#
K = 100
R = 0.2
v0 = -0.01
xind = 0
yind = hLy + R - 0.5*cellsize + v0*(time + exp(-time) - 1)
zind = 0

fix(indenter, indent, all, sphere, K, xind, yind, zind, R)


#------------------ DUMPS ------------------#
N_log = 1
dumping_interval = N_log*10

dump(dump1, all, particle, dumping_interval, dump_p.*.LAMMPS, x, y, z)
dump(dump2, all, grid, dumping_interval, dump_g.*.LAMMPS, x, y, z)

#----------- RUN --------------------#
dt_factor(1)

#log_modify(custom, step, dt, time, xind, yind, indenter_y)
plot(ind, N_log, yind, indenter_y)
log(N_log)
#run_time(0.26)
run(800)

#t1 = evaluate(time)
#xind = evaluate(xind) + v0*(time-t1 + exp(-(time-t1)) - 1)
#yind = evaluate(yind)

#run(10)
